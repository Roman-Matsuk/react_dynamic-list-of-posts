{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","request","url","fetch","then","response","json","result","data","PostsList","selectedUser","selectedPostId","setSelectedPostId","useState","posts","setPosts","useEffect","userId","filter","post","className","map","key","id","title","type","onClick","defaultProps","NewCommentForm","addNewComment","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","getPostComments","postId","item","PostDetails","details","setDetails","comments","setComments","showComments","setShowComments","removeComment","commentId","method","length","comment","headers","JSON","stringify","addComment","App","setSelectedUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d721e931.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nfunction request(url) {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json())\n    .then(result => result.data);\n}\n\nexport function getAllPosts() {\n  return request('/posts');\n}\n\nexport function getUserPosts(userId) {\n  return request(`/posts?userId=${userId}`);\n}\n\nexport function getPostDetails(postId) {\n  return request(`/posts/${postId}`);\n}\n\n// `/posts?userId=${userId}`\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\nimport { getAllPosts, getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({\n  selectedUser,\n  selectedPostId,\n  setSelectedPostId,\n}) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    if (selectedUser > 0) {\n      getUserPosts(selectedUser)\n        .then(setPosts);\n    } else {\n      getAllPosts()\n        .then(response => setPosts(response.filter(post => post.userId)));\n    }\n  }, [selectedUser]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                if (selectedPostId !== post.id) {\n                  setSelectedPostId(post.id);\n                } else {\n                  setSelectedPostId('');\n                }\n              }}\n            >\n              {post.id === selectedPostId ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.defaultProps = {\n  selectedPostId: '',\n};\n\nPostsList.propTypes = {\n  selectedUser: PropTypes.number.isRequired,\n  selectedPostId: PropTypes.number,\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\n\nexport const NewCommentForm = ({ addNewComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addNewComment(name, email, body);\n        setName('');\n        setEmail('');\n        setBody('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  addNewComment: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport function getPostComments(postId) {\n  return fetch(`${BASE_URL}/comments`)\n    .then(response => response.json())\n    .then(result => (\n      result.data\n        .filter(item => item.postId && item.body && item.postId === postId)\n    ));\n}\n\nexport function addComment(name, email, body, postId) {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      body,\n      postId,\n    }),\n  })\n    .then(response => response.json());\n}\n\nexport function deleteComment(postId) {\n  return fetch(`${BASE_URL}/comments/${postId}`, {\n    method: 'DELETE',\n  })\n    .then(response => response.json());\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, addComment, deleteComment } from '../../api/comments';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [details, setDetails] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [showComments, setShowComments] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(setDetails);\n\n    getPostComments(selectedPostId)\n      .then(setComments);\n  }, [selectedPostId]);\n\n  const addNewComment = (name, email, body) => {\n    addComment(name, email, body, selectedPostId)\n      .then(() => getPostComments(selectedPostId))\n      .then(setComments);\n  };\n\n  const removeComment = (commentId) => {\n    deleteComment(commentId)\n      .then(() => getPostComments(selectedPostId))\n      .then(setComments);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{details.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {(comments.length > 0)\n          ? (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setShowComments(!showComments)}\n            >\n              {showComments\n                ? `Hide ${comments.length} comments`\n                : 'Show comments'\n              }\n            </button>\n          )\n          : 'There is no comments'\n        }\n\n        {showComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => removeComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            addNewComment={addNewComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.defaultProps = {\n  selectedPostId: '',\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState('');\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUser}\n            onChange={event => setSelectedUser(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUser={selectedUser}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId && <PostDetails selectedPostId={selectedPostId} />}\n        </div>\n\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}